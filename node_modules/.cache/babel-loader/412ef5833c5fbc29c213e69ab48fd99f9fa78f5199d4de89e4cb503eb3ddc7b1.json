{"ast":null,"code":"var _jsxFileName = \"/Users/gayathri/Desktop/Capstone/NewGitFolder/EasyHire/src/Recruiterform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Candidateform.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recruiterform() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n    // degree: '',\n    // workExperience: '',\n    // resume: null,\n  });\n\n  const [errors, setErrors] = useState({});\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  //   const handleFileChange = (event) => {\n  //     const file = event.target.files[0];\n  //     if (file && file.type === 'application/pdf') {\n  //       setFormData({ ...formData, resume: file });\n  //       setErrors({ ...errors, resume: null });\n  //     } else {\n  //       setErrors({ ...errors, resume: 'Only PDF files are allowed.' });\n  //     }\n  //   };\n  const [submissionStatus, setSubmissionStatus] = useState(null);\n  const validateForm = () => {\n    let tempErrors = {};\n\n    // Simple validations (you can expand upon these)\n    if (!formData.firstName) tempErrors.firstName = 'First name is required.';\n    if (!formData.lastName) tempErrors.lastName = 'Last name is required.';\n    if (!formData.email.includes('@')) tempErrors.email = 'Email is invalid.';\n    if (formData.password.length < 8) tempErrors.password = 'Password should be at least 8 characters.';\n    if (formData.password !== formData.confirmPassword) tempErrors.confirmPassword = 'Passwords do not match.';\n    // if (!formData.resume) tempErrors.resume = 'Resume is required.';\n\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0; // Returns true if no errors\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (validateForm()) {\n      console.log('Form data submitted:', formData);\n      // Process your form data here (e.g., send to an API)\n      if (validateForm()) {\n        console.log('Form data submitted:', formData);\n        // Clear the form\n        setFormData({\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n          // degree: '',\n          // workExperience: '',\n          resume: null\n        });\n        // setSubmissionStatus('Form submitted successfully!');\n        {\n          submissionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submission-status\",\n            children: submissionStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 30\n          }, this);\n        }\n        // Process your form data here (e.g., send to an API)\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"lastName\",\n      placeholder: \"Last Name\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      placeholder: \"Email ID\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"Re-enter Password\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errors.confirmPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Recruiterform, \"ekfuvyHPkIf6dCi0jK9/DpwGZ4s=\");\n_c = Recruiterform;\nexport default Recruiterform;\nvar _c;\n$RefreshReg$(_c, \"Recruiterform\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Recruiterform","_s","formData","setFormData","firstName","lastName","email","password","confirmPassword","errors","setErrors","handleInputChange","event","name","value","target","submissionStatus","setSubmissionStatus","validateForm","tempErrors","includes","length","Object","keys","handleSubmit","preventDefault","console","log","resume","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","type","_c","$RefreshReg$"],"sources":["/Users/gayathri/Desktop/Capstone/NewGitFolder/EasyHire/src/Recruiterform.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Candidateform.css';\nfunction Recruiterform() {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    // degree: '',\n    // workExperience: '',\n    // resume: null,\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0];\n//     if (file && file.type === 'application/pdf') {\n//       setFormData({ ...formData, resume: file });\n//       setErrors({ ...errors, resume: null });\n//     } else {\n//       setErrors({ ...errors, resume: 'Only PDF files are allowed.' });\n//     }\n//   };\n  const [submissionStatus, setSubmissionStatus] = useState(null);\n  const validateForm = () => {\n    let tempErrors = {};\n\n    // Simple validations (you can expand upon these)\n    if (!formData.firstName) tempErrors.firstName = 'First name is required.';\n    if (!formData.lastName) tempErrors.lastName = 'Last name is required.';\n    if (!formData.email.includes('@')) tempErrors.email = 'Email is invalid.';\n    if (formData.password.length < 8) tempErrors.password = 'Password should be at least 8 characters.';\n    if (formData.password !== formData.confirmPassword) tempErrors.confirmPassword = 'Passwords do not match.';\n    // if (!formData.resume) tempErrors.resume = 'Resume is required.';\n\n    setErrors(tempErrors);\n    return Object.keys(tempErrors).length === 0; // Returns true if no errors\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validateForm()) {\n      console.log('Form data submitted:', formData);\n      // Process your form data here (e.g., send to an API)\n      if (validateForm()) {\n        console.log('Form data submitted:', formData);\n        // Clear the form\n        setFormData({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            // degree: '',\n            // workExperience: '',\n            resume: null,\n        });\n        // setSubmissionStatus('Form submitted successfully!');\n        {submissionStatus && <div className=\"submission-status\">{submissionStatus}</div>}\n        // Process your form data here (e.g., send to an API)\n    }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"firstName\" placeholder=\"First Name\" onChange={handleInputChange} />\n      {errors.firstName && <div>{errors.firstName}</div>}\n\n      <input name=\"lastName\" placeholder=\"Last Name\" onChange={handleInputChange} />\n      {errors.lastName && <div>{errors.lastName}</div>}\n\n      <input name=\"email\" placeholder=\"Email ID\" onChange={handleInputChange} />\n      {errors.email && <div>{errors.email}</div>}\n\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleInputChange} />\n      {errors.password && <div>{errors.password}</div>}\n\n      <input type=\"password\" name=\"confirmPassword\" placeholder=\"Re-enter Password\" onChange={handleInputChange} />\n      {errors.confirmPassword && <div>{errors.confirmPassword}</div>}\n\n      {/* <input name=\"degree\" placeholder=\"Degree\" onChange={handleInputChange} /> */}\n\n      {/* <textarea name=\"workExperience\" placeholder=\"Work Experience (if any)\" onChange={handleInputChange}></textarea> */}\n\n      {/* <input type=\"file\" onChange={handleFileChange} />\n      {errors.resume && <div>{errors.resume}</div>} */}\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default Recruiterform;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}